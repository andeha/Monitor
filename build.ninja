# build.ninja -- Building the MIPS/PIC32 Monitor.

optFlags = -g

# Two binaries for the PIC32MX family.
monitor    = monitor_pic32MX795F512L
nomonitor  = nomonitor_MX
loadscript = ./PIC32MX795F512L.ld
# ... and two binaries for the MZ.
# monitor    = monitor_PIC32MZ2064DAH169
# nomonitor  = nomonitor_MZ
# loadscript = ./PIC32MZ2064DAH169.ld

# Monitor or nomonitor, that is one question.
progname = $monitor
# progname = $nomonitor

objsdir = ./.objs/7703a312-5599-44aa-A992-eabcf7f87663_$progname
tools = /Users/andershansson/Projects/mips-tools
sha1git = `git log -1 '--pretty=format:%h'`
flags = $optFlags -target mipsel -mips32r2 -fno-rtti -fno-exceptions -fblocks

rule cc
    command = $tools/clang-6.0 -DSHA1GIT=\"$sha1git\" -MD -MF $out.d $flags --std=c++17 -c $in -o $out
    depfile = $out.d
    deps = gcc

rule c
    command = $tools/clang-6.0 -DSHA1GIT=\"$sha1git\" -MD -MF $out.d $flags -c $in -o $out
    depfile = $out.d
    deps = gcc

rule asm
    command = $tools/clang-6.0 $flags -c $in -o $out

rule link
    command = $tools/ld.lld -T $loadscript -o $out $in; $tools/llvm2pic32 $progname> Releases/$progname\_$sha1git.hex

rule emitsize
    command = $tools/llvm-size $progname

rule emitsect
    command = $tools/llvm-objdump -section-headers $progname

rule emitlist
    command = $tools/llvm-objdump -disassemble $progname

# requires -g
rule emitsource
    command = $tools/llvm-objdump -source $progname

rule emitsyms
    command = $tools/llvm-nm $progname | sort

build $monitor: link $objsdir/start.o $objsdir/irq.o $objsdir/main.o $objsdir/printf.o $objsdir/clang.o
build $nomonitor: link $objsdir/start.o $objsdir/nomonitor.o
build $objsdir/main.o: cc main.cpp
build $objsdir/nomonitor.o: cc nomonitor.cpp
build $objsdir/printf.o: cc printf.cpp
build $objsdir/clang.o: cc clang.cpp
build $objsdir/irq.o: asm irq.S
build $objsdir/start.o: asm start.S
build size: emitsize
build sect: emitsect
build syms: emitsyms
build list: emitlist
build source: emitsource
default $progname
